// App.js
import React, { useState, useEffect } from 'react';
import { View, Text, Image, ScrollView, StyleSheet, TouchableOpacity, TextInput, FlatList, SafeAreaView } from 'react-native';
import Icon from 'react-native-vector-icons/Ionicons';


const food = [
  {
    "name": "Beef Ramen",
    "price": "$23.00",
    "like": 100,
    "image": "./assets/anh1.png"
  },
  {
    "name": "Beef Ramen",
    "price": "$23.00",
    "like": 100,
    "image": "./assets/anh1.png"
  },
  {
    "name": "Beef Ramen",
    "price": "$23.00",
    "like": 100,
    "image": "./assets/anh1.png"
  },
  {
    "name": "Beef Ramen",
    "price": "$23.00",
    "like": 100,
    "image": "./assets/anh1.png"
  },
  {
    "name": "Beef Ramen",
    "price": "$23.00",
    "like": 100,
    "image": "./assets/anh1.png"
  },
  {
    "name": "Beef Ramen",
    "price": "$23.00",
    "like": 100,
    "image": "./assets/anh1.png"
  },
]

const category = [
  {
    "name": "",
    "image": ""
  },
  {
    "name": "",
    "image": ""
  },
  {
    "name": "",
    "image": ""
  }
]















const ProductCard = ({ title, rating, price, image }) => (
  <View style={styles.productCard}>
    <Image source={{ uri: image }} style={styles.productImagePlaceholder} />
    <View style={styles.productInfo}>
      <Text style={styles.productTitle}>{title}</Text>
      <View style={styles.ratingContainer}>
        {[...Array(5)].map((_, i) => (
          <Icon 
            key={i} 
            name={i < rating ? "star" : "star-outline"} 
            size={16} 
            color="#FFD700"
          />
        ))}
      </View>
      <Text style={styles.productPrice}>${price}</Text>
    </View>
    <TouchableOpacity style={styles.addButton}>
      <Icon name="add-circle" size={24} color="#6B4EFF" />
    </TouchableOpacity>
  </View>
);

const App = ({ navigation }) => {
  const [products, setProducts] = useState([]);
  const [filter, setFilter] = useState('All');

  useEffect(() => {
    fetch("https://670b3e35ac6860a6c2cb8557.mockapi.io/DienThoai")  // Replace with your API URL
      .then(response => response.json())
      .then(data => setProducts(data))
      .catch(error => console.error("Error fetching products:", error));
  }, []);
  const handleFilterChange = (type) => {
    setFilter(type);
  };
  const filteredProducts = filter === 'All' ? products : products.filter(product => product.type === filter);

  return (
    <View style={styles.container}>
      {/* Header */}
      <View style={styles.header}>
        <TouchableOpacity onPress={() => navigation.navigate('Screen1')}>
          <Icon name="options" size={24} color="#000" />
        </TouchableOpacity>
        <Text style={styles.headerTitle}>Ingoude Ramen</Text>
        <TouchableOpacity>
          <Image 
            source={require('./assets/anh1.png')}
            style={styles.avatar}
          />
        </TouchableOpacity>
      </View>
      {/* Search Bar */}
        <View style={styles.searchBar}>
          <TextInput placeholder="Search" style={styles.searchInput} />
          <Icon name="search" size={20} color="#666" />
          <TouchableOpacity>
            <Icon name="options" size={20} color="#666" />
          </TouchableOpacity>
        </View>
      
      {/* Panel */}
        <View style={styles.panel}>
          <Image 
            source={require('./assets/Capture.PNG')}
            style={styles.imagePanel}
          />
        </View>

      {/* Categories */}
      <View style={styles.categoriesSection}>
        <View style={styles.navigation}>
          <TouchableOpacity style={styles.navItem} onPress={() => handleFilterChange('All')}>
            <Image 
            source={require('./assets/anh1.png')}
            style={styles.avatar}
            />
            <Text style={styles.navText}>All</Text>
          </TouchableOpacity>
          <TouchableOpacity style={styles.navItem} onPress={() => handleFilterChange('Ramen')}>
            <Image 
            source={require('./assets/sup.png')}
            style={styles.avatar}
            />
            <Text style={styles.navText}>Ramen</Text>
          </TouchableOpacity>
          <TouchableOpacity style={styles.navItem} onPress={() => handleFilterChange('Drink')}>
            <Image 
            source={require('./assets/coca.png')}
            style={styles.avatar}
            />
            <Text style={styles.navText}>Drink</Text>
          </TouchableOpacity>
        </View>
      </View>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: 'red',
  },
  header: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
    paddingHorizontal: 16,
    paddingTop: 50,
    paddingBottom: 16,
  },
  headerTitle: {
    fontSize: 20,
    fontWeight: 'bold',
  },
  avatar: {
    width: 30,
    height: 30,
    borderRadius: 15,
  },
  panel:{
    width: '100%',
    height: 120,
    backgroundColor: "red",
    flexDirection: 'row',
    justifyContent: 'center',
    alignItems: 'center'
  },
  imagePanel:{
    height: 120,
    width: "100%",
  },
  content: {
    flex: 1,
  },
  searchBar: {
    flexDirection: 'row',
    alignItems: 'center',
    backgroundColor: '#F5F5F5',
    margin: 16,
    padding: 10,
    borderRadius: 10,
  },
  searchInput: {
    flex: 1,
    marginLeft: 10,
    fontSize: 16,
  },
  categoriesSection: {
    marginVertical: 16,
  },
  sectionHeader: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    paddingHorizontal: 16,
    marginBottom: 12,
  },
  sectionTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    color: "#FFF"
  },
  seeAll: {
    color: '#6B4EFF',
  },
  productsSection: {
    paddingHorizontal: 16,
    maxHeight: 400, // Điều chỉnh giá trị này theo mong muốn của bạn
  },
  productCard: {
    flexDirection: 'row',
    backgroundColor: '#fff',
    padding: 12,
    borderRadius: 12,
    marginBottom: 12,
    shadowColor: '#000',
    shadowOffset: {
      width: 0,
      height: 2,
    },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 3,
  },
  productImagePlaceholder: {
    width: 80,
    height: 80,
    backgroundColor: '#F5F5F5',
    borderRadius: 12,
  },
  productInfo: {
    flex: 1,
    marginLeft: 12,
  },
  productTitle: {
    fontSize: 16,
    fontWeight: '500',
  },
  ratingContainer: {
    flexDirection: 'row',
    marginVertical: 4,
  },
  productPrice: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#6B4EFF',
  },
  addButton: {
    justifyContent: 'center',
  },
  navigation: {
    flexDirection: 'row',
    justifyContent: 'center',
    padding: 10,
  },
  navItem: {
    flexDirection: 'row',
    paddingHorizontal: 15,
    paddingVertical: 5,
    borderWidth: 1,
    borderColor: '#ccc',
    borderRadius: 5,
    marginHorizontal: 5,
    backgroundColor: "#fff"
  },
  navText: {
    marginLeft: 5,
    color: '#000',
    fontWeight: 'bold',
  },
});

export default App;